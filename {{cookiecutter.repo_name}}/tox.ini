[tox]
envlist = py37

[pytest]
testpaths = tests

[testenv]
setenv =
	PYTHONPATH=
	PYTHONDONTWRITEBYTECODE=1
deps =
	pytest
commands =
	pytest {posargs}

# Configuration for coverage.py, used in coverage env
[coverage:run]
branch = True
omit =
    */__init__.py
    src/{{cookiecutter.project_slug}}/__main__.py
    src/{{cookiecutter.project_slug}}/_version.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
ignore_errors = True

[testenv:coverage]
description = Run unit tests, measuring code coverage
setenv =
	PYTHONPATH=
	PYTHONDONTWRITEBYTECODE=1
deps =
	pytest
	pytest-cov
	coverage
commands =
	coverage erase
	pytest --cov=src {posargs}

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
setenv =
	PYTHONPATH=
	PYTHONDONTWRITEBYTECODE=1
deps =
	sphinx >= 2
	sphinx-autoapi
	sphinx_rtd_theme
allowlist_externals = /bin/rm
commands =
	rm -r "{toxworkdir}/docs_out"
	sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
	python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
